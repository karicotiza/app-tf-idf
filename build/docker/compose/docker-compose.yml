name: app-tf-idf

services:
  traefik:
    image: traefik:v3.3.3
    container_name: app-tf-idf-traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--ping"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - app-chat-network
    depends_on:
      server:
        condition: service_healthy

  server:
    build: 
      dockerfile: ./build/docker/image/Dockerfile
      context: ../../../
    restart: unless-stopped
    volumes:
      - ../../../data/sqlite:/app/data/sqlite
    environment:
      - SERVER_DATABASE_URL=postgresql://admin:admin@postgres/tfidf
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8000"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - app-chat-network
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      replicas: 4
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=PathPrefix(`/`)"
      - "traefik.http.routers.server.entrypoints=web"
      - "traefik.http.services.server.loadbalancer.server.port=8000"
      - "traefik.http.services.server.loadbalancer.healthcheck.path=/"
      - "traefik.http.services.server.loadbalancer.healthcheck.interval=30s"
      - "traefik.http.services.server.loadbalancer.healthcheck.timeout=5s"
  
  postgres:
    image: postgres:17.3-bookworm
    container_name: app-tf-idf-postgres
    restart: unless-stopped
    volumes:
      - ../../../data/postgres:/var/lib/postgresql/data
    environment:
      - PGUSER=admin
      - PGDATABASE=tfidf
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=tfidf
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "tfidf"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - app-chat-network

networks:
  app-chat-network:
    driver: bridge